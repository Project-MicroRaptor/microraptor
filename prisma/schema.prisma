// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
}

model Project {
  id              String    @id @default(cuid())
  name            String
  createdAt       DateTime  @default(now())
  owner           User      @relation(fields: [ownerId], references: [id])
  ownerId         String
  targetFunding   Float
  currentFunding  Float
  area            String
  postcode        Int
  aboutBusiness   String?
  aboutOwner      String?
  businessPlan    String?
  categories      Categories[]
  images          String[]
  attachments     String[]
  rewards         ProjectReward[]
}

model ProjectReward {
  id            String    @id @default(cuid())
  project       Project   @relation(fields: [projectID], references: [id])
  projectID     String
  level         Int
  description   String
  cost          Float
}

enum Categories {
  ARTS
  FILM
  FOOD
  RETAIL
  NIGHTLIFE
  TECHNOLOGY
  GAMES
  MUSIC
  OTHER
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
